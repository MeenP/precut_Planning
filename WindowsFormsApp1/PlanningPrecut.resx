<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AGTB/wMqMBHf8rFiJQAAAABJRU5ErkJggg==
</value>
  </data>
</root>